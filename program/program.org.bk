* TODO Recupera archivos borrados con Test Disk
:PROPERTIES:
:TITLE: Recupera archivos borrados con Test Disk
:EXPORT_FILE_NAME: Recupera archivos borrados con Test Disk
:DESCRIPTION:
:EXPORT_DATE: 2019-08-15 22:00
:CATEGORY: bash
:TAG: bash
:IMAGE: ./images-blog/testdisk.png
:END:

Si has borrado por error un archivo en tu terminal, no temas, quizás estas a tiempo de recuperarlo. Voy a explicarte un método muy sencillo de hacerlo con TestDisk

#+HTML: <center height="250" width="250"> 
./images-blog/testdisk.png
#+HTML: </center

** Instalación
=sudo apt install testdisk=

** Funcionamiento
Le daremos a: =>[ Create ] Create a new log file=

Ahora nos mostrará todas las unidades que tenemos en nuestro sistema. Seleccionaremos la unidad desde la que queremos recuperar los datos.

Pulsaremos esta opción: =>[None   ] Non partitioned media=

Ahora le daremos a la opción avanzada: =>[ Advanced ] Filesystem Utils=

*En la parte inferior*, seleccionaremos =[  List  ]= 

Ahora navegaremos por nuestro disco. En color rojo saldrán los archivos borrados.

** Recuperar archivo
Para recuperar un archivo, nos situaremos encima del archivo rojo y seleccionaremos la letra *C*.

Ahora TestDisk nos preguntará donde queremos guardar el archivo, volvemos a pulsar la tecla *C* y... 

YA ESTÁ RECUPERADO!!! 

** Salir o ir hacia atras
Tan sencillo como pulsar la tecla *q*.


* Org-Bash-Blog: Previsualizar Posts

** Crea archivo de config 
Tendremos que ejecutar org-bash-blog desde el directorio *program*, así que tenemos que hacer una copia del archivo *config* en nuestra carpeta.


** Previsualizar

=org-bash-blog -w program.org=




* TODO Corrector Ortagráfico para Emacs en Raspbian

Tras adquirir mi nueva Raspberry 4 y la aparición de la nueva debian Buster, estoy utilizando Emacs remotamente. La versión de Emacs disponible en Raspbian Buster, es la Emacs 26.1. Los que conocemos Emacs, sabemos que exportando tu archivo de configuración init.el, Emacs en el primer arranque, instalará todos los paquetes necesarios y dejará este, igual que en el anterior dispositivo que lo estabas utilizando.

No a sido del todo así. El corrector de castellano, al utilizar una arquitectura diferente, me ha fallado. Así que he tenido que buscar una solución. Gracias al de emacs.stackexchange.com, la he encontrado. Adjunto el código adaptado para Castellano.
** Añade a tu init.el
En el caso de querer utilizar el Castellano como corrector, añadiremos esES. Sustituye por el idioma que desees.

#+BEGIN_SRC 
(setq ispell-program-name "hunspell")
(setq ispell-local-dictionary "es_ES")
(setq ispell-local-dictionary-alist
      '(("es_ES" "[[:alpha:]]" "[^[:alpha:]]" "[']" nil nil nil utf-8)))
#+END_SRC

